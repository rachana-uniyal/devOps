EXERCISE 3: Use docker-compose for Mysql and Phpmyadmin
You have 2 containers your app needs and you don't want to start them separately all the time. So you configure a docker-compose file for both:

Create a docker-compose file with both containers
Configure volume for your DB
Test that everything works again

Solution:


docker-compose.yaml file

version: '3'
services:
  mysql:
    image: mysql
    ports:
      - 3366:3306
    environment:
      - MYSQL_ROOT_PASSWORD=rootpass
      - MYSQL_DATABASE=team-member-projects
      - MYSQL_USER=admin    
      - MYSQL_PASSWORD=adminpass
    volumes:
    - mysql-data:/var/lib/mysql
    container_name: mysql
    command: --default-authentication-plugin=mysql_native_password
  phpmyadmin:
    image: phpmyadmin
    environment:
      - PMA_HOST=mysql
    ports:
      - 8083:80
    container_name: phpmyadmin
volumes:
  mysql-data:
    driver: local


Start containers with docker-compose

docker-compose -f docker-compose.yaml up    
